<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use DB;

class dictParserController extends Controller
{

    const partsOfSpeech = array(

            'noun' => array(
                'іменник' => array(
                        // теги іменника (леми):
                        'anim' => 'істота',
                        'fname' => 'імя',
                        'lname' => 'фамілія',
                        'pname' => 'по-батькові',
                        'inanim' => 'не істота',
                        'unanim' => 'невизначена категорія істота/неістота/бактерія',
                        'prop' => 'власна назва',
                        'p' => 'множина',
                        's' => 'однина',
                        'm' => 'чоловічий',
                        'f' => 'жіночий',
                        'n' => 'середній',
                        'v_naz' => 'називний',
                        'v_rod' => 'родовий',
                        'v_dav' => 'давальний',
                        'v_zna' => 'знахідний',
                        'v_oru' => 'орудний',
                        'v_mis' => 'місцевий',
                        'v_kly' => 'кличний',
                        'nv' => 'не відмінюється',
                        'np' => 'без множини', // (TODO: проставлено не всюди)
                        'ns' => 'без однини', // (TODO: проставлено не всюди)
                    )
                ),

            'verb' => array(
                'дієслово' => array(
                        // теги дієслова (леми):
                        'imperf' => 'недоконаний вид',
                        'perf' => 'доконаний вид',
                        'rev' => 'зворотна форма дієслова', // (тег є неявним ключем, оскільки лема на -ся завжди відрізняється від прямого дієслова)
                        //
                        'inf' => 'інфінітив',
                        'futr' => 'майбутній час',
                        'past' => 'минулий час',
                        'pres' => 'теперішній час',
                        'impr' => 'наказова форма',
                        'impers' => 'безособова форма',
                        // особи позначаються цифрами: 1,2,3
                        '1' => '1-ша особа',
                        '2' => '2-га особа',
                        '3' => '3-особа',
                        'p' => 'множина',
                        's' => 'однина',
                        'm' => 'чоловічий',
                        'f' => 'жіночий',
                        'n' => 'середній',
                    )
                ),

            'adj' => array(
                'прикметник' => array(
                        'compb' => 'базова форма',
                        'compc' => 'порівняльна форма',
                        'comps' => 'найвища форма',
                        'short' => 'короткі форми прикметників',
                        'p' => 'множина',
                        's' => 'однина',
                        'm' => 'чоловічий',
                        'f' => 'жіночий',
                        'n' => 'середній',
                        'v_naz' => 'називний',
                        'v_rod' => 'родовий',
                        'v_dav' => 'давальний',
                        'v_zna' => 'знахідний',
                        'v_oru' => 'орудний',
                        'v_mis' => 'місцевий',
                        'v_kly' => 'кличний',
                        'nv' => 'не відмінюється',
                        'np' => 'без множини', // (TODO: проставлено не всюди)
                        'ns' => 'без однини', // (TODO: проставлено не всюди)
                    )
                ),

            'adjp' => array(
                'дієприкметник' => array(
                    'p' => 'множина',
                    's' => 'однина',
                    'm' => 'чоловічий',
                    'f' => 'жіночий',
                    'n' => 'середній',
                    'v_naz' => 'називний',
                    'v_rod' => 'родовий',
                    'v_dav' => 'давальний',
                    'v_zna' => 'знахідний',
                    'v_oru' => 'орудний',
                    'v_mis' => 'місцевий',
                    'v_kly' => 'кличний',
                    'nv' => 'не відмінюється',
                    'np' => 'без множини', // (TODO: проставлено не всюди)
                    'ns' => 'без однини', // (TODO: проставлено не всюди)
                )
            ),

            '&adjp' => 'лише дієприкметник',
            '&&adjp' => array(
                'дієприкметник і прикметник' => array(
                        'actv' => 'активний',
                        'pasv' => 'пасивний',
                        'imperf' => 'недоконаний вид',
                        'perf' => 'доконаний вид',
                        'past' => 'минулий час',
                        'pres' => 'теперішній час',
                    )
                ),

            'adv' => array(
                'прислівник' => array(
                        'compb' => 'базова форма',
                        'compc' => 'порівняльна форма',
                        'comps' => 'найвища форма',
                    )
                ),

            'advp' => array(
                'дієприслівник' => array(
                        'perf' => 'доконаний вид',
                        'imperf' => 'недоконаний вид',
                        'rev' => 'зворотна форма',
                    )
                ),

            'prep' => 'прийменник',

            'conj' => array(
                'сполучник' => array(
                        'subord' => 'підрядний',
                        'coord' => 'сурядний',
                    )
                ),

            'part' => 'частка',
            'intj' => 'вигук',
            'numr' => 'числівник', // теги: '&numr','&&numr' - це теж числівники

            'foreign' => 'невідмінювані запозичені слова невизначеної частини мови',
            'noninfl' => ' невідмінювані частини', // (най-най, брутто, екстра...)

            // Додаткові теги:
            'abbr' => 'абревіатура',
            'bad' =>  'покруч',
            'subst' => 'просторічна форма',
            'rare' => 'рідковживане/діалектичне/застаріле',
            'coll' => 'розмовне слово/розмовна форма',
            'slang' => 'сленг',
            'alt' => 'альтернативне написання (не за чинним правописом)',

            '&pron' => array(
                'займенник' => array(
                        // Теги займенників:
                        'pers' => 'особовий',
                        'refl' => 'зворотний',
                        'pos' =>  'присвійний',
                        'dem' =>  'вказівний',
                        'def' =>  'означальний',
                        'int' =>  'питальний',
                        'rel' =>  'відносний',
                        'neg' =>  'заперечний',
                        'ind' =>  'неозначений',
                        'gen' =>  'узагальнювальний',
                        'emph' => 'підсилювальний',
                    )
                ),

            '&insert' => 'може бути вставним словом',
            '&predic' =>' може бути предикативом',


        );

        const nounAndAdj = array(
                'p' => 'множина',
                's' => 'однина',
                'm' => 'чоловічий',
                'f' => 'жіночий',
                'n' => 'середній',
                'v_naz' => 'називний',
                'v_rod' => 'родовий',
                'v_dav' => 'давальний',
                'v_zna' => 'знахідний',
                'v_oru' => 'орудний',
                'v_mis' => 'місцевий',
                'v_kly' => 'кличний'
            );


    // Сторінка одного слова:
    public function sourceParsing()
    {

        /*
            Зараз обєм InnoDB 602 MB
        */

        // Виключатель парсера:
        $swither = 0;



        $partsOfSpeech = self::partsOfSpeech;
        $partOfSpeachArray = array();
        $parentID = 0; // стартовий ІД


        // Зберігаю у масив усі частини мови:
        foreach ($partsOfSpeech as $partOfSpeechName => $partOfSpeechValue) {
            $partOfSpeachArray[] = $partOfSpeechName;
        }

        ### Програма внесення словника до бази даних:
        if( $swither == 1) {

            // Файл:
            $content = file('dict_corp_vis.txt',1);
            $maxLine = count($content);

            for ($i = 0; $i < $maxLine; $i++) {

                $current = $content[$i];

                /* Обробка даних поточної строки з файлу: */

                        // Перевіряю чи це головне слово, чи похідне:
                        if(mb_substr($current,0,1,'utf-8') == ' ') {
                            $sub = 1;
                        } else {
                            $sub = 0;
                        }

                        // Видаляю коментарі і займі пробіли з обох боків:
                        $wordInfo = trim(explode('#',$current)[0]);
                        $parts = explode(' ',$wordInfo);

                        // Слово для вставки в базу:
                        $word = $parts[0];

                        // Параметри слова:
                        $wordParams = $parts[1];

                        //
                        $paramsArray = explode(':',$wordParams);
                        $tmpPoS = array();

                        // Проходжу всі параметри:
                        foreach ($paramsArray as $tmp => $currentParam) {

                            // Якщо параметр вказує на частину мови:
                            if(in_array($currentParam,$partOfSpeachArray)){

                                // Зберігаю усі частини мови, до яких належить поточне слово у масив:
                                $tmpPoS[] = $currentParam;
                            }

                        }

                        $omon = array(
                            'xp1','xp2','xp3','xp4','xp5','xp6',
                        );

                        $letters_count = iconv_strlen($word, 'UTF-8');

                /* <-- Закінчення обробки даних */





                // Якщо це головне слово, то батьківське = 0:
                if ($sub == 0) {
                    $parentID = 0;
                } // інакше $parentID залишається з попереднього запиту

                $omonim = 0;

                foreach ($omon as $xp) {
                    if(in_array($xp,$paramsArray)) {
                        $omonim = 1;
                    }
                }

                $wordParamArray = array(
                    'word' => $word,
                    'letters_count' => $letters_count,
                    'omonim' => $omonim,
                    'parentID' => $parentID,
                );

                foreach ($tmpPoS as $wordPoStmp) {
                    $wordParamArray['ukr_'.$wordPoStmp] = 1;
                }

                // Вношу слово у базу даних із вказанням всіх частин мови, до яких воно належить:
                $nextID = DB::table('ukr_vocabulary')->insertGetId($wordParamArray);

                // Якщо це батьківське слово, то ідентифікатор внесеного слова стає батьківським:
                if ($sub == 0) {
                    $parentID = $nextID;
                } // інакше $parentID залишається з попереднього запиту




                // Проходжу всім частинам мови, до яких належить поточне слово:
                foreach ($tmpPoS as $wordPoS) {

                    // Готую масив даних для поточного слова:
                    $posParamArray = array('id' => $nextID);

                    // Якщо ця частина мови має параметри:
                    if(is_array($partsOfSpeech[$wordPoS])) {

                        // Якщо параметри є:
                        foreach ($partsOfSpeech[$wordPoS] as $posUkr => $posArray) {

                        // Додаю параметри із поточним ідентифакатором:
                            foreach ($paramsArray as $tmp => $currentParam) {
                                if(array_key_exists($currentParam, $posArray)) {
                                    $posParamArray['ukr_'.$currentParam] = 1;
                                }
                            }

                            // Вношу слово у базу даних із поточним ідентифакатором:
                            DB::table('ukr_'.$wordPoS)->insertGetId($posParamArray);

                        }
                    } else {
                        // Якщо параметрів немає, то лише вношу слово із поточним ідентифакатором у відповідну таблицю з префіксом:
                        DB::table('ukr_'.$wordPoS)->insertGetId($posParamArray);
                    }
                }
            }


        } ### Кінець програми внесення словника до бази даних.



    }
}
